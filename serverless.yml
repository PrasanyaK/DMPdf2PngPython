# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
custom:
  stage: ${opt:stage,'dev'}
  configuration: ${file(configurations/${self:custom.stage}.yml)} 
  prune:
    automatic: true
    number: 1

service: ${self:custom.configuration.service}
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '1'

provider:
  name: aws
  runtime: python3.7
  profile: ${self:custom.configuration.profile}
  deploymentBucket: ${self:custom.configuration.deploymentbucket}

# you can overwrite defaults here
  stage: ${self:custom.configuration.stage}
  region: ${self:custom.configuration.region}


# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:*"
      Resource: 
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            -  ${self:custom.configuration.s3bucketname}
            - '/*'
    - Effect: "Allow"
      Action: 
        - lambda:InvokeFunction
      Resource: 
        - Fn::Join:
          - ":"
          - - 'arn:aws:lambda'
            - ${self:custom.configuration.region}
            - ${self:custom.configuration.accountid}
            - 'function'
            - DMDownloadImage-${self:custom.configuration.stage}-DBInsert
    #  Resource:
    #    Fn::Join:
    #     - ":"
    #       - - 'arn:aws:lambda'
    #         - ${self:custom.configuration.region}
    #         - ${self:custom.configuration.accountid}
    #         - 'function'
    #         - ${self:custom.configuration.service}-${self:custom.configuration.stage}-pdf2png

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  pdf2png:
    handler: handler.pdf2png
    timeout: 30
    layers:
      - arn:aws:lambda:${self:custom.configuration.region}:${self:custom.configuration.accountid}:layer:poppler:${self:custom.configuration.layerVersion}

plugins:
  - serverless-prune-plugin
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
